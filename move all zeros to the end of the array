Input: n = 5, arr[] = {3, 5, 0, 0, 4}
Output: 3 5 4 0 0
Explanation: The non-zero elements preserve their order while the 0 elements are moved to the right.

================================================

import java.util.*;
public class Main
{
	public static void main(String[] args) {
		int[] arr={3,5,0,0,4};
		for(int i=0;i<arr.length-1;i++){
		    for(int j=i+1;j<arr.length;j++){
		        if(arr[i]==0 && arr[j]!=0){
		            arr[i]=arr[j];
		            arr[j]=0;
		            break;
		        }
		    }
		}
		System.out.println(Arrays.toString(arr));
	}
}
Time complexity - O(n2)
========================================================

 int index = 0;
		for(int i=0;i<n;i++){
		    if(arr[i]!=0){
		        arr[index++]=arr[i];
		    }
		}
		while(index<n){
		    arr[index++]=0;
		}
time complexity - O(n)
============================================
