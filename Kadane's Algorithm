Given an integer array arr[]. You need to find and return the maximum sum possible from all the subarrays.

Examples:

Input: arr[] = [2, 3, -8, 7, -1, 2, 3]
Output: 11
Explanation: The subarray {7, -1, 2, 3} has the largest sum 11.
Input: arr[] = [-2, -4]
Output: -2
Explanation: The subarray {-2} has the largest sum -2.
Input: arr[] = [5, 4, 1, 7, 8]
Output: 25
Explanation: The subarray {5, 4, 1, 7, 8} has the largest sum 25.

=============================================================================================


// User function Template for Java
class Solution {

    // arr: input array
    // Function to find the sum of contiguous subarray with maximum sum.
    int maxSubarraySum(int[] arr) {
        
        if(arr.length==0){
            return 0;
        }
        
        int max = arr[0];
        int maxsum = arr[0];
        
        for(int i=1;i<arr.length;i++){
            maxsum = Math.max(arr[i],maxsum+arr[i]);
            
            max = Math.max(maxsum,max);
        }
       return max;
    }
}
