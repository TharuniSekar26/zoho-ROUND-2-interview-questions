Given an array A of N length. We need to calculate the next smallest greater element for each element in a given array. If the next greater element is not available in a given array then we need to fill -10000000 at that index place.

Example 1:

Input : arr[] = {13, 6, 7, 12}
Output : _ 7 12 13 
Explanation:
Here, at index 0, 13 is the greatest value 
in given array and no other array element 
is greater from 13. So at index 0 we fill 
'-10000000'.

Example 2:

Input : arr[] = {6, 3, 9, 8, 10, 2, 1, 15, 7} 
Output :  7 6 10 9 15 3 2 _ 8
Explanation: Here, at index 7, 15 is the greatest
value in given array and no other array element is
greater from 15. So at index 7 we fill '-10000000'.

=============================================================================================


class Complete{
    
   
    
    public static int[] greaterElement (int arr[], int n) {
        int[] a = new int[n];
        TreeSet<Integer> s = new TreeSet<>();
        
        for(int i:arr){
            s.add(i);
        }
        
        for(int i=0;i<n;i++){
            Integer big = s.higher(arr[i]);
            a[i]=(big!=null)? big : -10000000;
        }
        return a;
        
    }
    
    
}
