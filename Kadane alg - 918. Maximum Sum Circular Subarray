Example 1:

Input: nums = [1,-2,3,-2]
Output: 3
Explanation: Subarray [3] has maximum sum 3.
Example 2:

Input: nums = [5,-3,5]
Output: 10
Explanation: Subarray [5,5] has maximum sum 5 + 5 = 10.
Example 3:

Input: nums = [-3,-2,-3]
Output: -2
Explanation: Subarray [-2] has maximum sum -2.

---------------------------------------------------


class Solution {
    public int maxSubarraySumCircular(int[] nums) {
        int maxsum = nums[0];
        int minsum = nums[0];
        int max = nums[0];
        int min = nums[0];

        int total = nums[0];
    

        for(int i=1;i<nums.length;i++){
            maxsum = Math.max(maxsum+nums[i],nums[i]);
            max = Math.max(max,maxsum);

            minsum = Math.min(minsum+nums[i],nums[i]);
            min = Math.min(min,minsum);

             total+=nums[i];
        }
        if(max<0){
            return max;
        }
        return Math.max(total-min,max);

    }
}
