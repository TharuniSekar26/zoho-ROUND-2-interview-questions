Input: Four Jobs with following deadlines and profits


JobID  Deadline  Profit


  a           4          20   
  b           1          10
  c           1          40  
  d          1          30


Output: Following is maximum profit sequence of jobs: c, a   


Input:  Five Jobs with following deadlines and profits


JobID   Deadline  Profit


  a            2          100
  b            1          19
  c            2          27
 d            1          25
 e            3          15


Output: Following is maximum profit sequence of jobs: c, a, e


----------------------------------------


package DAY1;
import java.util.*;
public class JobSequencing {

	static class Job{
		char id;
		int deadline;
		int profit;
		Job(char id,int deadline, int profit){
			this.id = id;
			this.deadline = deadline;
			this.profit = profit;
		}
	}
	public static void main(String[] args) {
		ArrayList<Job> jobs = new ArrayList<>();
//		jobs.add(new Job('a', 4, 20));
//		jobs.add(new Job('b', 1, 10));
//		jobs.add(new Job('c', 1, 40));
//		jobs.add(new Job('d', 1, 30));
		
		jobs.add(new Job('a', 2, 100));
		jobs.add(new Job('b', 1, 19));
		jobs.add(new Job('c', 2, 27));
		jobs.add(new Job('d', 1, 25));
		jobs.add(new Job('e', 3, 15));
		
		findMaxProfit(jobs);
		

	}
	private static void findMaxProfit(ArrayList<Job> jobs) {
		int n=jobs.size();
		int profit = 0;

		Collections.sort(jobs,(a,b)->b.profit-a.profit);
		int maxDeadline=1;
		for(Job job:jobs) {
			maxDeadline = Math.max(maxDeadline, job.deadline);
		}
		char[] result = new char[maxDeadline];
		Arrays.fill(result,'-');
		
		for(Job job:jobs) {
			for(int i=job.deadline-1;i>=0;i--) {
				if(result[i]=='-') {
					profit+=job.profit;
					result[i]=job.id;
					break;
				}
			}
		}
		
		for (char c : result) {
            if (c != '-') {
                System.out.print(c + " ");
            }
        }
		
		
	}

}
